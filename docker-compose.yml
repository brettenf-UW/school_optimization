version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: echelon
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # LocalStack for AWS services simulation
  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sqs,cognito,secretsmanager
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - localstack_data:/tmp/localstack
      - "./localstack:/docker-entrypoint-initaws.d"
      
  # Backend API
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    depends_on:
      - db
      - localstack
    environment:
      - ENVIRONMENT=dev
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/echelon
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-west-2
      - S3_BUCKET_NAME=dev-echelon-data
      - SQS_QUEUE_URL=http://localstack:4566/000000000000/dev-echelon-optimization-jobs
      - COGNITO_USER_POOL_ID=us-west-2_gVCuWb3dQ
      - COGNITO_APP_CLIENT_ID=2vabalt8ij3kfp4tibhahce7ds
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
      
  # Frontend
  frontend:
    image: node:18
    working_dir: /app
    depends_on:
      - api
    ports:
      - "5173:5173"
    volumes:
      - ./echelon:/app
    command: bash -c "npm install && npm run dev -- --host 0.0.0.0"
    environment:
      - VITE_API_URL=http://localhost:8000
      
  # Adminer for database management
  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - "8080:8080"

volumes:
  postgres_data:
  localstack_data: